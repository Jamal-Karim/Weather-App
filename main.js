(()=>{"use strict";!async function(){const t=await async function(){const t=await fetch("http://api.weatherapi.com/v1/forecast.json?key=9da97e80930143a38c213928241202&q=corona&days=3"),n=await t.json();return console.log(n),n}(),n=await async function(t){return{location:t.location.name,condition:t.current.condition.text,sunrise:t.forecast.forecastday[0].astro.sunrise,sunset:t.forecast.forecastday[0].astro.sunset}}(t),a=await async function(t){return{tempF:t.current.temp_f,tempC:t.current.temp_c,humidity:t.current.humidity,wind_mph:t.current.wind_mph}}(t),o=await async function(t){const n=parseInt(t.current.last_updated.slice(11,13));let a=[n+1,n+2,n+3,n+4],o={};for(let n=0;n<a.length;n++)o[a[n]]=a[n]>23?t.forecast.forecastday[1].hour[a[n]-23]:t.forecast.forecastday[0].hour[a[n]];return{forecast:o}}(t);console.log(o);const e={...n,...a,...o};console.log(e)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoib0JBY0FBLGlCQUNJLE1BQU1DLFFBWEhELGlCQUNILE1BQU1FLFFBQWlCQyxNQUFNLGlHQUV2QkMsUUFBYUYsRUFBU0csT0FJNUIsT0FGQUMsUUFBUUMsSUFBSUgsR0FFTEEsQ0FDWCxDQUcwQkksR0FDaEJDLFFDaEJIVCxlQUErQkksR0FTbEMsTUFBTyxDQUFDSyxTQVJTTCxFQUFLSyxTQUFTQyxLQVFiQyxVQU5BUCxFQUFLUSxRQUFRRCxVQUFVRSxLQU1aQyxRQUpiVixFQUFLVyxTQUFTQyxZQUFZLEdBQUdDLE1BQU1ILFFBSWJJLE9BRnZCZCxFQUFLVyxTQUFTQyxZQUFZLEdBQUdDLE1BQU1DLE9BR3RELENETTJCQyxDQUFnQmxCLEdBQ2pDbUIsUUVqQkhwQixlQUEyQkksR0FNOUIsTUFBTyxDQUFDaUIsTUFMTWpCLEVBQUtRLFFBQVFVLE9BS1pDLE1BSkRuQixFQUFLUSxRQUFRWSxPQUlMQyxTQUhMckIsRUFBS1EsUUFBUWEsU0FHRUMsU0FGZnRCLEVBQUtRLFFBQVFjLFNBR2xDLENGVTJCQyxDQUFZMUIsR0FFN0IyQixRR25CSDVCLGVBQStCSSxHQUNsQyxNQUFNeUIsRUFBV0MsU0FBUzFCLEVBQUtRLFFBQVFtQixhQUFhQyxNQUFNLEdBQUcsS0FPN0QsSUFBSUMsRUFBUyxDQUxHSixFQUFXLEVBQ1ZBLEVBQVcsRUFDWkEsRUFBVyxFQUNWQSxFQUFXLEdBSXhCZCxFQUFXLENBQUMsRUFFaEIsSUFBSSxJQUFJbUIsRUFBSSxFQUFHQSxFQUFJRCxFQUFPRSxPQUFRRCxJQUUxQm5CLEVBQVNrQixFQUFPQyxJQURqQkQsRUFBT0MsR0FBSyxHQUNXOUIsRUFBS1csU0FBU0MsWUFBWSxHQUFHb0IsS0FBS0gsRUFBT0MsR0FBSyxJQUU5QzlCLEVBQUtXLFNBQVNDLFlBQVksR0FBR29CLEtBQUtILEVBQU9DLElBS3ZFLE1BQU8sQ0FBQ25CLFdBQ1osQ0hIc0IsQ0FBaUJkLEdBQ25DSyxRQUFRQyxJQUFJcUIsR0FFWixNQUFNeEIsRUFBTyxJQUFJSyxLQUFhVyxLQUFhUSxHQUUzQ3RCLFFBQVFDLElBQUlILEVBQ2hCLENBRUFpQyxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvbG9jYXRpb24uanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvdGVtcC5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9mb3JlY2FzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRMb2NhdGlvbkRhdGEgfSBmcm9tIFwiLi9sb2NhdGlvbi5qc1wiO1xyXG5pbXBvcnQgeyBnZXRUZW1wRGF0YSB9IGZyb20gXCIuL3RlbXAuanNcIjtcclxuaW1wb3J0IHsgZ2V0Rm9yZWNhc3REYXRhIH0gZnJvbSBcIi4vZm9yZWNhc3QuanNcIjtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXREYXRhKCl7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2ZvcmVjYXN0Lmpzb24/a2V5PTlkYTk3ZTgwOTMwMTQzYTM4YzIxMzkyODI0MTIwMiZxPWNvcm9uYSZkYXlzPTMnKTtcclxuXHJcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG5cclxuICAgIHJldHVybiBkYXRhO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBjb21iaW5lZERhdGEoKXtcclxuICAgIGNvbnN0IGFwaUNhbGwgPSBhd2FpdCBnZXREYXRhKCk7XHJcbiAgICBjb25zdCBsb2NhdGlvbiA9IGF3YWl0IGdldExvY2F0aW9uRGF0YShhcGlDYWxsKTtcclxuICAgIGNvbnN0IHRlbXBEYXRhID0gYXdhaXQgZ2V0VGVtcERhdGEoYXBpQ2FsbCk7XHJcblxyXG4gICAgY29uc3QgdGltZSA9IGF3YWl0KGdldEZvcmVjYXN0RGF0YShhcGlDYWxsKSk7XHJcbiAgICBjb25zb2xlLmxvZyh0aW1lKTtcclxuXHJcbiAgICBjb25zdCBkYXRhID0gey4uLmxvY2F0aW9uLCAuLi50ZW1wRGF0YSwgLi4udGltZX07XHJcblxyXG4gICAgY29uc29sZS5sb2coZGF0YSk7XHJcbn1cclxuXHJcbmNvbWJpbmVkRGF0YSgpOyIsImV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRMb2NhdGlvbkRhdGEoZGF0YSkge1xyXG4gICAgY29uc3QgbG9jYXRpb24gPSBkYXRhLmxvY2F0aW9uLm5hbWU7XHJcblxyXG4gICAgY29uc3QgY29uZGl0aW9uID0gZGF0YS5jdXJyZW50LmNvbmRpdGlvbi50ZXh0O1xyXG5cclxuICAgIGNvbnN0IHN1bnJpc2UgPSBkYXRhLmZvcmVjYXN0LmZvcmVjYXN0ZGF5WzBdLmFzdHJvLnN1bnJpc2U7XHJcblxyXG4gICAgY29uc3Qgc3Vuc2V0ID0gZGF0YS5mb3JlY2FzdC5mb3JlY2FzdGRheVswXS5hc3Ryby5zdW5zZXQ7XHJcblxyXG4gICAgcmV0dXJuIHtsb2NhdGlvbiwgY29uZGl0aW9uLCBzdW5yaXNlLCBzdW5zZXR9O1xyXG59IiwiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRlbXBEYXRhKGRhdGEpe1xyXG4gICAgY29uc3QgdGVtcEYgPSBkYXRhLmN1cnJlbnQudGVtcF9mO1xyXG4gICAgY29uc3QgdGVtcEMgPSBkYXRhLmN1cnJlbnQudGVtcF9jO1xyXG4gICAgY29uc3QgaHVtaWRpdHkgPSBkYXRhLmN1cnJlbnQuaHVtaWRpdHk7XHJcbiAgICBjb25zdCB3aW5kX21waCA9IGRhdGEuY3VycmVudC53aW5kX21waDtcclxuXHJcbiAgICByZXR1cm4ge3RlbXBGLCB0ZW1wQywgaHVtaWRpdHksIHdpbmRfbXBofVxyXG59IiwiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEZvcmVjYXN0RGF0YShkYXRhKXtcclxuICAgIGNvbnN0IGRhdGVUaW1lID0gcGFyc2VJbnQoZGF0YS5jdXJyZW50Lmxhc3RfdXBkYXRlZC5zbGljZSgxMSwxMykpO1xyXG5cclxuICAgIGNvbnN0IGZpcnN0SHIgPSBkYXRlVGltZSArIDE7XHJcbiAgICBjb25zdCBzZWNvbmRIciA9IGRhdGVUaW1lICsgMjtcclxuICAgIGNvbnN0IHRoaXJkSHIgPSBkYXRlVGltZSArIDM7XHJcbiAgICBjb25zdCBmb3VydGhIciA9IGRhdGVUaW1lICsgNDtcclxuXHJcbiAgICBsZXQgaHJzQXJyID0gW2ZpcnN0SHIsIHNlY29uZEhyLCB0aGlyZEhyLCBmb3VydGhIcl07XHJcblxyXG4gICAgbGV0IGZvcmVjYXN0ID0ge307XHJcblxyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IGhyc0Fyci5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgaWYoaHJzQXJyW2ldID4gMjMpe1xyXG4gICAgICAgICAgICBmb3JlY2FzdFtocnNBcnJbaV1dID0gZGF0YS5mb3JlY2FzdC5mb3JlY2FzdGRheVsxXS5ob3VyW2hyc0FycltpXSAtIDIzXVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGZvcmVjYXN0W2hyc0FycltpXV0gPSBkYXRhLmZvcmVjYXN0LmZvcmVjYXN0ZGF5WzBdLmhvdXJbaHJzQXJyW2ldXTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHJldHVybiB7Zm9yZWNhc3R9O1xyXG59Il0sIm5hbWVzIjpbImFzeW5jIiwiYXBpQ2FsbCIsInJlc3BvbnNlIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJnZXREYXRhIiwibG9jYXRpb24iLCJuYW1lIiwiY29uZGl0aW9uIiwiY3VycmVudCIsInRleHQiLCJzdW5yaXNlIiwiZm9yZWNhc3QiLCJmb3JlY2FzdGRheSIsImFzdHJvIiwic3Vuc2V0IiwiZ2V0TG9jYXRpb25EYXRhIiwidGVtcERhdGEiLCJ0ZW1wRiIsInRlbXBfZiIsInRlbXBDIiwidGVtcF9jIiwiaHVtaWRpdHkiLCJ3aW5kX21waCIsImdldFRlbXBEYXRhIiwidGltZSIsImRhdGVUaW1lIiwicGFyc2VJbnQiLCJsYXN0X3VwZGF0ZWQiLCJzbGljZSIsImhyc0FyciIsImkiLCJsZW5ndGgiLCJob3VyIiwiY29tYmluZWREYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==